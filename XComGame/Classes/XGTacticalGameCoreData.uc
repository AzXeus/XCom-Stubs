class XGTacticalGameCoreData extends Actor
    hidecategories(Navigation)
    native(Core)
    abstract
    notplaceable
	DependsOn(XComWorldData);

enum ECharacterProperty
{
    eCP_None,
    eCP_Climb,
    eCP_Flight,
    eCP_Robotic,
    eCP_MeleeOnly,
    eCP_Hardened,
    eCP_CanGainXP,
    eCP_AirEvade,
    eCP_NoCover,
    eCP_PoisonImmunity,
    eCP_LargeUnit,
    eCP_Poisonous,
    eCP_DeathExplosion,
    eCP_DoubleOverwatch,
    eCP_MAX
};

enum EAbility
{
    eAbility_NONE,
    eAbility_Move,
    eAbility_Fly,
    eAbility_FlyUp,
    eAbility_FlyDown,
    eAbility_Launch,
    eAbility_Grapple,
    eAbility_ShotStandard,
    eAbility_RapidFire,
    eAbility_ShotStun,
    eAbility_ShotDroneHack,
    eAbility_ShotOverload,
    eAbility_ShotFlush,
    eAbility_ShotSuppress,
    eAbility_ShotDamageCover,
    eAbility_FlashBang,
    eAbility_FragGrenade,
    eAbility_SmokeGrenade,
    eAbility_AlienGrenade,
    eAbility_RocketLauncher,
    eAbility_Aim,
    eAbility_Intimidate,
    eAbility_Overwatch,
    eAbility_Torch,
    eAbility_Plague,
    eAbility_Stabilize,
    eAbility_Revive,
    eAbility_TakeCover,
    eAbility_Ghost,
    eAbility_MedikitHeal,
    eAbility_RepairSHIV,
    eAbility_CombatStim,
    eAbility_EquipWeapon,
    eAbility_Reload,
    eAbility_MindMerge,
    eAbility_PsiLance,
    eAbility_PsiBoltII,
    eAbility_PsiBomb,
    eAbility_GreaterMindMerge,
    eAbility_PsiControl,
    eAbility_PsiPanic,
    eAbility_WarCry,
    eAbility_Berserk,
    eAbility_ReanimateAlly,
    eAbility_ReanimateEnemy,
    eAbility_PsiDrain,
    eAbility_PsiBless,
    eAbility_DoubleTap,
    eAbility_PrecisionShot,
    eAbility_DisablingShot,
    eAbility_SquadSight,
    eAbility_TooCloseForComfort,
    eAbility_ShredderRocket,
    eAbility_ShotMayhem,
    eAbility_RunAndGun,
    eAbility_BullRush,
    eAbility_BattleScanner,
    eAbility_Mindfray,
    eAbility_Rift,
    eAbility_TelekineticField,
    eAbility_MindControl,
    eAbility_PsiInspiration,
    eAbility_CloseCyberdisc,
    eAbility_DeathBlossom,
    eAbility_CannonFire,
    eAbility_ClusterBomb,
    eAbility_DestroyTerrain,
    eAbility_PsiInspired,
    eAbility_Repair,
    eAbility_HeatWave,
    eAbility_CivilianCover,
    eAbility_Bloodlust,
    eAbility_BloodCall,
    eAbility_MimeticSkin,
    eAbility_AdrenalNeurosympathy,
    eAbility_MimicBeacon,
    eAbility_GasGrenade,
    eAbility_GhostGrenade,
    eAbility_GhostGrenadeStealth,
    eAbility_NeedleGrenade,
    eAbility_MEC_Flamethrower,
    eAbility_MEC_KineticStrike,
    eAbility_MEC_ProximityMine,
    eAbility_JetbootModule,
    eAbility_MEC_Barrage,
    eAbility_MEC_OneForAll,
    eAbility_MEC_GrenadeLauncher,
    eAbility_MEC_RestorativeMist,
    eAbility_MEC_ElectroPulse,
    eAbility_MEC_RestorativeMistHealing,
    eAbility_Strangle,
    eAbility_Stealth,
    eAbility_ActivateStealthMP,
    eAbility_DeactivateStealthMP,
    eAbility_PsiReflect,
    eAbility_FlashBangDaze_DEPRECATED,
    eAbility_MAX
};

enum ECharacterStat
{
    eStat_HP,
    eStat_Offense,
    eStat_Defense,
    eStat_Mobility,
    eStat_Strength,
    eStat_ShieldHP,
    eStat_CouncilMedalAccrued,
    eStat_Will,
    eStat_AppliedSuppression,
    eStat_LowCoverBonus,
    eStat_SightRadius,
    eStat_WeaponRange,
    eStat_Damage,
    eStat_CriticalShot,
    eStat_CriticalWoundChance,
    eStat_CriticalWoundsReceived,
    eStat_CloseCombat,
    eStat_FlightFuel,
    eStat_Reaction,
    eStat_MAX
};

enum ESoldierClass
{
    eSC_None,
    eSC_Sniper,
    eSC_HeavyWeapons,
    eSC_Support,
    eSC_Assault,
    eSC_Psi,
    eSC_Mec,
    eSC_MAX
};

enum EWeaponProperty
{
    eWP_None,
    eWP_Secondary,
    eWP_Pistol,
    eWP_AnyClass,
    eWP_Support,
    eWP_Rifle,
    eWP_Assault,
    eWP_Sniper,
    eWP_Heavy,
    eWP_Explosive,
    eWP_UnlimitedAmmo,
    eWP_Overheats,
    eWP_Psionic,
    eWP_Melee,
    eWP_Integrated,
    eWP_Encumber,
    eWP_MoveLimited,
    eWP_Backpack,
    eWP_NoReload,
    eWP_CantReact,
    eWP_Mec,
    eWP_MAX
};

enum EWeaponClass
{
    eWeaponClass_None,
    eWeaponClass_Assault,
    eWeaponClass_Shotgun,
    eWeaponClass_Heavy,
    eWeaponClass_Sniper,
    eWeaponClass_Sniper1,
    eWeaponClass_MAX
};

