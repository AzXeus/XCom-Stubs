/*******************************************************************************
 * Checkpoint generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2014 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Checkpoint extends Object
    native(Core)
    config(Checkpoint);

struct native ActorRecord
{
    var string ActorPathName;
    var string ActorName;
    var Vector ActorPosition;
    var Rotator ActorRotation;
    var string ActorClassPath;
    var int TemplateIndex;
    var array<byte> RecordData;

    structdefaultproperties
    {
        ActorPathName=""
        ActorName=""
        ActorPosition=(X=0.0,Y=0.0,Z=0.0)
        ActorRotation=(Pitch=0,Yaw=0,Roll=0)
        ActorClassPath=""
        TemplateIndex=0
        RecordData=none
    }
};

struct native ActorTemplateInfo
{
    var string ActorClassPath;
    var string ArchetypePath;
    var byte LoadParams[64];
    var bool UseTemplate;
    var Class ActorClass;
    var Actor Template;

    structdefaultproperties
    {
        ActorClassPath=""
        ArchetypePath=""
        LoadParams[0]=0
        LoadParams[1]=0
        LoadParams[2]=0
        LoadParams[3]=0
        LoadParams[4]=0
        LoadParams[5]=0
        LoadParams[6]=0
        LoadParams[7]=0
        LoadParams[8]=0
        LoadParams[9]=0
        LoadParams[10]=0
        LoadParams[11]=0
        LoadParams[12]=0
        LoadParams[13]=0
        LoadParams[14]=0
        LoadParams[15]=0
        LoadParams[16]=0
        LoadParams[17]=0
        LoadParams[18]=0
        LoadParams[19]=0
        LoadParams[20]=0
        LoadParams[21]=0
        LoadParams[22]=0
        LoadParams[23]=0
        LoadParams[24]=0
        LoadParams[25]=0
        LoadParams[26]=0
        LoadParams[27]=0
        LoadParams[28]=0
        LoadParams[29]=0
        LoadParams[30]=0
        LoadParams[31]=0
        LoadParams[32]=0
        LoadParams[33]=0
        LoadParams[34]=0
        LoadParams[35]=0
        LoadParams[36]=0
        LoadParams[37]=0
        LoadParams[38]=0
        LoadParams[39]=0
        LoadParams[40]=0
        LoadParams[41]=0
        LoadParams[42]=0
        LoadParams[43]=0
        LoadParams[44]=0
        LoadParams[45]=0
        LoadParams[46]=0
        LoadParams[47]=0
        LoadParams[48]=0
        LoadParams[49]=0
        LoadParams[50]=0
        LoadParams[51]=0
        LoadParams[52]=0
        LoadParams[53]=0
        LoadParams[54]=0
        LoadParams[55]=0
        LoadParams[56]=0
        LoadParams[57]=0
        LoadParams[58]=0
        LoadParams[59]=0
        LoadParams[60]=0
        LoadParams[61]=0
        LoadParams[62]=0
        LoadParams[63]=0
        UseTemplate=false
        ActorClass=none
        Template=none
    }
};

var const localized string DisplayName;
var Class MyClass;
var int SlotIndex;
var string BaseLevelName;
var string GameType;
var array<ActorRecord> ActorRecords;
var array<Object> ActorRecordClasses;
var array<byte> KismetData;
var array<name> ActorNames;
var array<name> ClassNames;
var array<ActorTemplateInfo> ActorTemplates;
var const array< class<Actor> > ActorClassesToRecord;
var const array< class<Actor> > ActorClassesToDestroy;
var const array< class<Actor> > ActorClassesNotToDestroy;
var const bool IsMapSave;
var array< class<Actor> > OnlyApplyActorClasses;
var int SyncSeed;
var int CheckpointVersion;
var delegate<PostSaveCheckpointCallback> __PostSaveCheckpointCallback__Delegate;
var delegate<PostLoadCheckpointCallback> __PostLoadCheckpointCallback__Delegate;

delegate PostSaveCheckpointCallback()
{
    //return;    
}

delegate PostLoadCheckpointCallback()
{
    //return;    
}

event PreLoadCheckpoint()
{
    OnlyApplyActorClasses.Remove(0, OnlyApplyActorClasses.Length);
    //return;    
}

// Export UCheckpoint::execLoadKismetData(FFrame&, void* const)
native final function LoadKismetData();

// Export UCheckpoint::execGetBaseLevelName(FFrame&, void* const)
native static final function string GetBaseLevelName();
